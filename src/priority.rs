
#[derive(Debug, PartialEq, Clone, Copy, Eq, Hash, PartialOrd, Ord)]
pub enum Item {
    a,
    b,
    c,
    d,
    e,
    f,
    g,
    h,
    i,
    j,
    k,
    l,
    m,
    n,
    o,
    p,
    q,
    r,
    s,
    t,
    u,
    v,
    w,
    x,
    y,
    z,
    A,
    B,
    C,
    D,
    E,
    F,
    G,
    H,
    I,
    J,
    K,
    L,
    M,
    N,
    O,
    P,
    Q,
    R,
    S,
    T,
    U,
    V,
    W,
    X,
    Y,
    Z,
}

impl Item {
    // match each item and get the priority
    // a -> z (1 -> 26)
    // A -> Z (27 -> 52)
    pub fn get_priority(&self) -> u32 {
        match self {
            Item::a => 1,
            Item::b => 2,
            Item::c => 3,
            Item::d => 4,
            Item::e => 5,
            Item::f => 6,
            Item::g => 7,
            Item::h => 8,
            Item::i => 9,
            Item::j => 10,
            Item::k => 11,
            Item::l => 12,
            Item::m => 13,
            Item::n => 14,
            Item::o => 15,
            Item::p => 16,
            Item::q => 17,
            Item::r => 18,
            Item::s => 19,
            Item::t => 20,
            Item::u => 21,
            Item::v => 22,
            Item::w => 23,
            Item::x => 24,
            Item::y => 25,
            Item::z => 26,
            Item::A => 27,
            Item::B => 28,
            Item::C => 29,
            Item::D => 30,
            Item::E => 31,
            Item::F => 32,
            Item::G => 33,
            Item::H => 34,
            Item::I => 35,
            Item::J => 36,
            Item::K => 37,
            Item::L => 38,
            Item::M => 39,
            Item::N => 40,
            Item::O => 41,
            Item::P => 42,
            Item::Q => 43,
            Item::R => 44,
            Item::S => 45,
            Item::T => 46,
            Item::U => 47,
            Item::V => 48,
            Item::W => 49,
            Item::X => 50,
            Item::Y => 51,
            Item::Z => 52,
        }
    }

    pub fn from_str(val: &str) -> Self {
        match val {
            "a" => Item::a,
            "b" => Item::b,
            "c" => Item::c,
            "d" => Item::d,
            "e" => Item::e,
            "f" => Item::f,
            "g" => Item::g,
            "h" => Item::h,
            "i" => Item::i,
            "j" => Item::j,
            "k" => Item::k,
            "l" => Item::l,
            "m" => Item::m,
            "n" => Item::n,
            "o" => Item::o,
            "p" => Item::p,
            "q" => Item::q,
            "r" => Item::r,
            "s" => Item::s,
            "t" => Item::t,
            "u" => Item::u,
            "v" => Item::v,
            "w" => Item::w,
            "x" => Item::x,
            "y" => Item::y,
            "z" => Item::z,
            "A" => Item::A,
            "B" => Item::B,
            "C" => Item::C,
            "D" => Item::D,
            "E" => Item::E,
            "F" => Item::F,
            "G" => Item::G,
            "H" => Item::H,
            "I" => Item::I,
            "J" => Item::J,
            "K" => Item::K,
            "L" => Item::L,
            "M" => Item::M,
            "N" => Item::N,
            "O" => Item::O,
            "P" => Item::P,
            "Q" => Item::Q,
            "R" => Item::R,
            "S" => Item::S,
            "T" => Item::T,
            "U" => Item::U,
            "V" => Item::V,
            "W" => Item::W,
            "X" => Item::X,
            "Y" => Item::Y,
            "Z" => Item::Z,
            _ => panic!("Invalid item"),
        }
    }
}
